(()=>{"use strict";var __webpack_modules__={465:(__unused_webpack_module,exports,__webpack_require__)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.activate = void 0;\nconst utils_1 = __webpack_require__(679);\nfunction activate(extensionContext) {\n    extensionContext.registerMessageConverter({\n        fromSchemaName: "autoware_auto_planning_msgs/msg/Path",\n        toSchemaName: "foxglove.SceneUpdate",\n        converter: (msg) => {\n            const { points, left_bound, right_bound } = msg;\n            const triangleList = {\n                pose: {\n                    position: { x: 0, y: 0, z: 0 },\n                    orientation: { x: 0, y: 0, z: 0, w: 1 },\n                },\n                points: [],\n                color: { r: 0, g: 0, b: 0, a: 0 },\n                colors: [],\n                indices: [],\n            };\n            // Create rectangles for the path\n            for (let i = 0; i < left_bound.length - 1; i++) {\n                // Corresponding points on the left and right bounds\n                const leftPoint1 = left_bound[i];\n                const leftPoint2 = left_bound[i + 1];\n                const rightPoint1 = right_bound[i];\n                const rightPoint2 = right_bound[i + 1];\n                // Add points to the triangle list\n                triangleList.points.push(leftPoint1, rightPoint1, leftPoint2, rightPoint2);\n                // Add colors for each point\n                const color1 = (0, utils_1.setColorDependsOnVelocity)(8.33, points[i]?.longitudinal_velocity_mps ?? 8.33);\n                const color2 = (0, utils_1.setColorDependsOnVelocity)(8.33, points[i + 1]?.longitudinal_velocity_mps ?? 8.33);\n                triangleList.colors.push(color1, color2, color1, color2);\n                // Add indices for two triangles: (leftPoint1, rightPoint1, leftPoint2) and (leftPoint2, rightPoint1, rightPoint2)\n                const baseIndex = i * 4;\n                triangleList.indices.push(baseIndex, baseIndex + 1, baseIndex + 2, baseIndex + 2, baseIndex + 1, baseIndex + 3);\n            }\n            const sceneUpdate = {\n                deletions: [],\n                entities: [\n                    {\n                        id: "path",\n                        arrows: [],\n                        lines: [],\n                        cubes: [],\n                        spheres: [],\n                        cylinders: [],\n                        models: [],\n                        texts: [],\n                        triangles: [triangleList],\n                        timestamp: msg.header.stamp,\n                        frame_id: msg.header.frame_id,\n                        frame_locked: false,\n                        lifetime: {\n                            sec: 1,\n                            nsec: 0,\n                        },\n                        metadata: [],\n                    },\n                ],\n            };\n            return sceneUpdate;\n        },\n    });\n}\nexports.activate = activate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDY1LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQixnQkFBZ0IsbUJBQU8sQ0FBQyxHQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0NBQWtDO0FBQ3REO0FBQ0E7QUFDQSxnQ0FBZ0Msa0JBQWtCO0FBQ2xELG1DQUFtQyx3QkFBd0I7QUFDM0QsaUJBQWlCO0FBQ2pCO0FBQ0EseUJBQXlCLHdCQUF3QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwyQkFBMkI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BhdGhDb252ZXJ0ZXIvLi9zcmMvaW5kZXgudHM/MzNiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYWN0aXZhdGUgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5mdW5jdGlvbiBhY3RpdmF0ZShleHRlbnNpb25Db250ZXh0KSB7XG4gICAgZXh0ZW5zaW9uQ29udGV4dC5yZWdpc3Rlck1lc3NhZ2VDb252ZXJ0ZXIoe1xuICAgICAgICBmcm9tU2NoZW1hTmFtZTogXCJhdXRvd2FyZV9hdXRvX3BsYW5uaW5nX21zZ3MvbXNnL1BhdGhcIixcbiAgICAgICAgdG9TY2hlbWFOYW1lOiBcImZveGdsb3ZlLlNjZW5lVXBkYXRlXCIsXG4gICAgICAgIGNvbnZlcnRlcjogKG1zZykgPT4ge1xuICAgICAgICAgICAgY29uc3QgeyBwb2ludHMsIGxlZnRfYm91bmQsIHJpZ2h0X2JvdW5kIH0gPSBtc2c7XG4gICAgICAgICAgICBjb25zdCB0cmlhbmdsZUxpc3QgPSB7XG4gICAgICAgICAgICAgICAgcG9zZToge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogeyB4OiAwLCB5OiAwLCB6OiAwIH0sXG4gICAgICAgICAgICAgICAgICAgIG9yaWVudGF0aW9uOiB7IHg6IDAsIHk6IDAsIHo6IDAsIHc6IDEgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHBvaW50czogW10sXG4gICAgICAgICAgICAgICAgY29sb3I6IHsgcjogMCwgZzogMCwgYjogMCwgYTogMCB9LFxuICAgICAgICAgICAgICAgIGNvbG9yczogW10sXG4gICAgICAgICAgICAgICAgaW5kaWNlczogW10sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgLy8gQ3JlYXRlIHJlY3RhbmdsZXMgZm9yIHRoZSBwYXRoXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlZnRfYm91bmQubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgLy8gQ29ycmVzcG9uZGluZyBwb2ludHMgb24gdGhlIGxlZnQgYW5kIHJpZ2h0IGJvdW5kc1xuICAgICAgICAgICAgICAgIGNvbnN0IGxlZnRQb2ludDEgPSBsZWZ0X2JvdW5kW2ldO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxlZnRQb2ludDIgPSBsZWZ0X2JvdW5kW2kgKyAxXTtcbiAgICAgICAgICAgICAgICBjb25zdCByaWdodFBvaW50MSA9IHJpZ2h0X2JvdW5kW2ldO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJpZ2h0UG9pbnQyID0gcmlnaHRfYm91bmRbaSArIDFdO1xuICAgICAgICAgICAgICAgIC8vIEFkZCBwb2ludHMgdG8gdGhlIHRyaWFuZ2xlIGxpc3RcbiAgICAgICAgICAgICAgICB0cmlhbmdsZUxpc3QucG9pbnRzLnB1c2gobGVmdFBvaW50MSwgcmlnaHRQb2ludDEsIGxlZnRQb2ludDIsIHJpZ2h0UG9pbnQyKTtcbiAgICAgICAgICAgICAgICAvLyBBZGQgY29sb3JzIGZvciBlYWNoIHBvaW50XG4gICAgICAgICAgICAgICAgY29uc3QgY29sb3IxID0gKDAsIHV0aWxzXzEuc2V0Q29sb3JEZXBlbmRzT25WZWxvY2l0eSkoOC4zMywgcG9pbnRzW2ldPy5sb25naXR1ZGluYWxfdmVsb2NpdHlfbXBzID8/IDguMzMpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvbG9yMiA9ICgwLCB1dGlsc18xLnNldENvbG9yRGVwZW5kc09uVmVsb2NpdHkpKDguMzMsIHBvaW50c1tpICsgMV0/LmxvbmdpdHVkaW5hbF92ZWxvY2l0eV9tcHMgPz8gOC4zMyk7XG4gICAgICAgICAgICAgICAgdHJpYW5nbGVMaXN0LmNvbG9ycy5wdXNoKGNvbG9yMSwgY29sb3IyLCBjb2xvcjEsIGNvbG9yMik7XG4gICAgICAgICAgICAgICAgLy8gQWRkIGluZGljZXMgZm9yIHR3byB0cmlhbmdsZXM6IChsZWZ0UG9pbnQxLCByaWdodFBvaW50MSwgbGVmdFBvaW50MikgYW5kIChsZWZ0UG9pbnQyLCByaWdodFBvaW50MSwgcmlnaHRQb2ludDIpXG4gICAgICAgICAgICAgICAgY29uc3QgYmFzZUluZGV4ID0gaSAqIDQ7XG4gICAgICAgICAgICAgICAgdHJpYW5nbGVMaXN0LmluZGljZXMucHVzaChiYXNlSW5kZXgsIGJhc2VJbmRleCArIDEsIGJhc2VJbmRleCArIDIsIGJhc2VJbmRleCArIDIsIGJhc2VJbmRleCArIDEsIGJhc2VJbmRleCArIDMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgc2NlbmVVcGRhdGUgPSB7XG4gICAgICAgICAgICAgICAgZGVsZXRpb25zOiBbXSxcbiAgICAgICAgICAgICAgICBlbnRpdGllczogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJwYXRoXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhcnJvd3M6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgbGluZXM6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgY3ViZXM6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3BoZXJlczogW10sXG4gICAgICAgICAgICAgICAgICAgICAgICBjeWxpbmRlcnM6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWxzOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRzOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyaWFuZ2xlczogW3RyaWFuZ2xlTGlzdF0sXG4gICAgICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IG1zZy5oZWFkZXIuc3RhbXAsXG4gICAgICAgICAgICAgICAgICAgICAgICBmcmFtZV9pZDogbXNnLmhlYWRlci5mcmFtZV9pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZyYW1lX2xvY2tlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBsaWZldGltZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlYzogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuc2VjOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGFkYXRhOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBzY2VuZVVwZGF0ZTtcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmV4cG9ydHMuYWN0aXZhdGUgPSBhY3RpdmF0ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///465\n')},679:(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.setColorDependsOnVelocity = void 0;\nfunction setColorDependsOnVelocity(vel_max, cmd_vel) {\n    // Get absolute value of velocity\n    const cmd_vel_abs = Math.abs(cmd_vel);\n    const vel_min = 0.0;\n    // Set color pointer\n    let color = { r: 0, g: 0, b: 0, a: 0.5 };\n    // If velocity is between vel_min and vel_max/2, set color from red to yellow\n    if (vel_min < cmd_vel_abs && cmd_vel_abs <= vel_max / 2.0) {\n        // Get ratio of velocity\n        const ratio = (cmd_vel_abs - vel_min) / (vel_max / 2.0 - vel_min);\n        // Set color\n        color = gradation({ r: 1.0, g: 0, b: 0, a: 0.5 }, { r: 1.0, g: 1.0, b: 0, a: 0.5 }, ratio);\n        // If velocity is between vel_max/2 and vel_max, set color from yellow to green\n    }\n    else if (vel_max / 2.0 < cmd_vel_abs && cmd_vel_abs <= vel_max) {\n        // Get ratio of velocity\n        const ratio = (cmd_vel_abs - vel_max / 2.0) / (vel_max - vel_max / 2.0);\n        // Set color\n        color = gradation({ r: 1.0, g: 1.0, b: 0, a: 0.5 }, { r: 0, g: 1.0, b: 0, a: 0.5 }, ratio);\n        // If velocity is greater than vel_max, set color to green\n    }\n    else if (vel_max < cmd_vel_abs) {\n        color = { r: 0, g: 1.0, b: 0, a: 0.5 };\n        // If velocity is less than vel_min, set color to red\n    }\n    else {\n        color = { r: 1.0, g: 0, b: 0, a: 0.5 };\n    }\n    return color;\n}\nexports.setColorDependsOnVelocity = setColorDependsOnVelocity;\nfunction gradation(color_min, color_max, ratio) {\n    const color = { r: 0, g: 0, b: 0, a: 0.5 };\n    color.r = color_max.r * ratio + color_min.r * (1.0 - ratio);\n    color.g = color_max.g * ratio + color_min.g * (1.0 - ratio);\n    color.b = color_max.b * ratio + color_min.b * (1.0 - ratio);\n    color.a = 0.5; // Assuming full opacity. Adjust as needed.\n    return color;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjc5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsNEJBQTRCLElBQUksOEJBQThCO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qiw4QkFBOEIsSUFBSSw0QkFBNEI7QUFDMUY7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wYXRoQ29udmVydGVyLy4vc3JjL3V0aWxzLnRzP2FlY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNldENvbG9yRGVwZW5kc09uVmVsb2NpdHkgPSB2b2lkIDA7XG5mdW5jdGlvbiBzZXRDb2xvckRlcGVuZHNPblZlbG9jaXR5KHZlbF9tYXgsIGNtZF92ZWwpIHtcbiAgICAvLyBHZXQgYWJzb2x1dGUgdmFsdWUgb2YgdmVsb2NpdHlcbiAgICBjb25zdCBjbWRfdmVsX2FicyA9IE1hdGguYWJzKGNtZF92ZWwpO1xuICAgIGNvbnN0IHZlbF9taW4gPSAwLjA7XG4gICAgLy8gU2V0IGNvbG9yIHBvaW50ZXJcbiAgICBsZXQgY29sb3IgPSB7IHI6IDAsIGc6IDAsIGI6IDAsIGE6IDAuNSB9O1xuICAgIC8vIElmIHZlbG9jaXR5IGlzIGJldHdlZW4gdmVsX21pbiBhbmQgdmVsX21heC8yLCBzZXQgY29sb3IgZnJvbSByZWQgdG8geWVsbG93XG4gICAgaWYgKHZlbF9taW4gPCBjbWRfdmVsX2FicyAmJiBjbWRfdmVsX2FicyA8PSB2ZWxfbWF4IC8gMi4wKSB7XG4gICAgICAgIC8vIEdldCByYXRpbyBvZiB2ZWxvY2l0eVxuICAgICAgICBjb25zdCByYXRpbyA9IChjbWRfdmVsX2FicyAtIHZlbF9taW4pIC8gKHZlbF9tYXggLyAyLjAgLSB2ZWxfbWluKTtcbiAgICAgICAgLy8gU2V0IGNvbG9yXG4gICAgICAgIGNvbG9yID0gZ3JhZGF0aW9uKHsgcjogMS4wLCBnOiAwLCBiOiAwLCBhOiAwLjUgfSwgeyByOiAxLjAsIGc6IDEuMCwgYjogMCwgYTogMC41IH0sIHJhdGlvKTtcbiAgICAgICAgLy8gSWYgdmVsb2NpdHkgaXMgYmV0d2VlbiB2ZWxfbWF4LzIgYW5kIHZlbF9tYXgsIHNldCBjb2xvciBmcm9tIHllbGxvdyB0byBncmVlblxuICAgIH1cbiAgICBlbHNlIGlmICh2ZWxfbWF4IC8gMi4wIDwgY21kX3ZlbF9hYnMgJiYgY21kX3ZlbF9hYnMgPD0gdmVsX21heCkge1xuICAgICAgICAvLyBHZXQgcmF0aW8gb2YgdmVsb2NpdHlcbiAgICAgICAgY29uc3QgcmF0aW8gPSAoY21kX3ZlbF9hYnMgLSB2ZWxfbWF4IC8gMi4wKSAvICh2ZWxfbWF4IC0gdmVsX21heCAvIDIuMCk7XG4gICAgICAgIC8vIFNldCBjb2xvclxuICAgICAgICBjb2xvciA9IGdyYWRhdGlvbih7IHI6IDEuMCwgZzogMS4wLCBiOiAwLCBhOiAwLjUgfSwgeyByOiAwLCBnOiAxLjAsIGI6IDAsIGE6IDAuNSB9LCByYXRpbyk7XG4gICAgICAgIC8vIElmIHZlbG9jaXR5IGlzIGdyZWF0ZXIgdGhhbiB2ZWxfbWF4LCBzZXQgY29sb3IgdG8gZ3JlZW5cbiAgICB9XG4gICAgZWxzZSBpZiAodmVsX21heCA8IGNtZF92ZWxfYWJzKSB7XG4gICAgICAgIGNvbG9yID0geyByOiAwLCBnOiAxLjAsIGI6IDAsIGE6IDAuNSB9O1xuICAgICAgICAvLyBJZiB2ZWxvY2l0eSBpcyBsZXNzIHRoYW4gdmVsX21pbiwgc2V0IGNvbG9yIHRvIHJlZFxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29sb3IgPSB7IHI6IDEuMCwgZzogMCwgYjogMCwgYTogMC41IH07XG4gICAgfVxuICAgIHJldHVybiBjb2xvcjtcbn1cbmV4cG9ydHMuc2V0Q29sb3JEZXBlbmRzT25WZWxvY2l0eSA9IHNldENvbG9yRGVwZW5kc09uVmVsb2NpdHk7XG5mdW5jdGlvbiBncmFkYXRpb24oY29sb3JfbWluLCBjb2xvcl9tYXgsIHJhdGlvKSB7XG4gICAgY29uc3QgY29sb3IgPSB7IHI6IDAsIGc6IDAsIGI6IDAsIGE6IDAuNSB9O1xuICAgIGNvbG9yLnIgPSBjb2xvcl9tYXguciAqIHJhdGlvICsgY29sb3JfbWluLnIgKiAoMS4wIC0gcmF0aW8pO1xuICAgIGNvbG9yLmcgPSBjb2xvcl9tYXguZyAqIHJhdGlvICsgY29sb3JfbWluLmcgKiAoMS4wIC0gcmF0aW8pO1xuICAgIGNvbG9yLmIgPSBjb2xvcl9tYXguYiAqIHJhdGlvICsgY29sb3JfbWluLmIgKiAoMS4wIC0gcmF0aW8pO1xuICAgIGNvbG9yLmEgPSAwLjU7IC8vIEFzc3VtaW5nIGZ1bGwgb3BhY2l0eS4gQWRqdXN0IGFzIG5lZWRlZC5cbiAgICByZXR1cm4gY29sb3I7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///679\n')}},__webpack_module_cache__={};function __webpack_require__(I){var g=__webpack_module_cache__[I];if(void 0!==g)return g.exports;var C=__webpack_module_cache__[I]={exports:{}};return __webpack_modules__[I](C,C.exports,__webpack_require__),C.exports}var __webpack_exports__=__webpack_require__(465);module.exports=__webpack_exports__})();